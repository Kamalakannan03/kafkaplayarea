/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.mycorp.mynamespace;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Cab location tracker */
@org.apache.avro.specific.AvroGenerated
public class CabLocation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4836167200534642821L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CabLocation\",\"namespace\":\"com.mycorp.mynamespace\",\"doc\":\"Cab location tracker\",\"fields\":[{\"name\":\"LocationCode\",\"type\":\"int\",\"doc\":\"The int type is a 32-bit signed integer.\"},{\"name\":\"Latitude\",\"type\":\"string\",\"doc\":\"The Latitude of location\"},{\"name\":\"Longitude\",\"type\":\"string\",\"doc\":\"The Longitude of location\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CabLocation> ENCODER =
      new BinaryMessageEncoder<CabLocation>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CabLocation> DECODER =
      new BinaryMessageDecoder<CabLocation>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CabLocation> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CabLocation> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CabLocation>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CabLocation to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CabLocation from a ByteBuffer. */
  public static CabLocation fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The int type is a 32-bit signed integer. */
  @Deprecated public int LocationCode;
  /** The Latitude of location */
  @Deprecated public java.lang.CharSequence Latitude;
  /** The Longitude of location */
  @Deprecated public java.lang.CharSequence Longitude;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CabLocation() {}

  /**
   * All-args constructor.
   * @param LocationCode The int type is a 32-bit signed integer.
   * @param Latitude The Latitude of location
   * @param Longitude The Longitude of location
   */
  public CabLocation(java.lang.Integer LocationCode, java.lang.CharSequence Latitude, java.lang.CharSequence Longitude) {
    this.LocationCode = LocationCode;
    this.Latitude = Latitude;
    this.Longitude = Longitude;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return LocationCode;
    case 1: return Latitude;
    case 2: return Longitude;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: LocationCode = (java.lang.Integer)value$; break;
    case 1: Latitude = (java.lang.CharSequence)value$; break;
    case 2: Longitude = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'LocationCode' field.
   * @return The int type is a 32-bit signed integer.
   */
  public java.lang.Integer getLocationCode() {
    return LocationCode;
  }

  /**
   * Sets the value of the 'LocationCode' field.
   * The int type is a 32-bit signed integer.
   * @param value the value to set.
   */
  public void setLocationCode(java.lang.Integer value) {
    this.LocationCode = value;
  }

  /**
   * Gets the value of the 'Latitude' field.
   * @return The Latitude of location
   */
  public java.lang.CharSequence getLatitude() {
    return Latitude;
  }

  /**
   * Sets the value of the 'Latitude' field.
   * The Latitude of location
   * @param value the value to set.
   */
  public void setLatitude(java.lang.CharSequence value) {
    this.Latitude = value;
  }

  /**
   * Gets the value of the 'Longitude' field.
   * @return The Longitude of location
   */
  public java.lang.CharSequence getLongitude() {
    return Longitude;
  }

  /**
   * Sets the value of the 'Longitude' field.
   * The Longitude of location
   * @param value the value to set.
   */
  public void setLongitude(java.lang.CharSequence value) {
    this.Longitude = value;
  }

  /**
   * Creates a new CabLocation RecordBuilder.
   * @return A new CabLocation RecordBuilder
   */
  public static com.mycorp.mynamespace.CabLocation.Builder newBuilder() {
    return new com.mycorp.mynamespace.CabLocation.Builder();
  }

  /**
   * Creates a new CabLocation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CabLocation RecordBuilder
   */
  public static com.mycorp.mynamespace.CabLocation.Builder newBuilder(com.mycorp.mynamespace.CabLocation.Builder other) {
    return new com.mycorp.mynamespace.CabLocation.Builder(other);
  }

  /**
   * Creates a new CabLocation RecordBuilder by copying an existing CabLocation instance.
   * @param other The existing instance to copy.
   * @return A new CabLocation RecordBuilder
   */
  public static com.mycorp.mynamespace.CabLocation.Builder newBuilder(com.mycorp.mynamespace.CabLocation other) {
    return new com.mycorp.mynamespace.CabLocation.Builder(other);
  }

  /**
   * RecordBuilder for CabLocation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CabLocation>
    implements org.apache.avro.data.RecordBuilder<CabLocation> {

    /** The int type is a 32-bit signed integer. */
    private int LocationCode;
    /** The Latitude of location */
    private java.lang.CharSequence Latitude;
    /** The Longitude of location */
    private java.lang.CharSequence Longitude;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.mycorp.mynamespace.CabLocation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.LocationCode)) {
        this.LocationCode = data().deepCopy(fields()[0].schema(), other.LocationCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Latitude)) {
        this.Latitude = data().deepCopy(fields()[1].schema(), other.Latitude);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Longitude)) {
        this.Longitude = data().deepCopy(fields()[2].schema(), other.Longitude);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CabLocation instance
     * @param other The existing instance to copy.
     */
    private Builder(com.mycorp.mynamespace.CabLocation other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.LocationCode)) {
        this.LocationCode = data().deepCopy(fields()[0].schema(), other.LocationCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Latitude)) {
        this.Latitude = data().deepCopy(fields()[1].schema(), other.Latitude);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Longitude)) {
        this.Longitude = data().deepCopy(fields()[2].schema(), other.Longitude);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'LocationCode' field.
      * The int type is a 32-bit signed integer.
      * @return The value.
      */
    public java.lang.Integer getLocationCode() {
      return LocationCode;
    }

    /**
      * Sets the value of the 'LocationCode' field.
      * The int type is a 32-bit signed integer.
      * @param value The value of 'LocationCode'.
      * @return This builder.
      */
    public com.mycorp.mynamespace.CabLocation.Builder setLocationCode(int value) {
      validate(fields()[0], value);
      this.LocationCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'LocationCode' field has been set.
      * The int type is a 32-bit signed integer.
      * @return True if the 'LocationCode' field has been set, false otherwise.
      */
    public boolean hasLocationCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'LocationCode' field.
      * The int type is a 32-bit signed integer.
      * @return This builder.
      */
    public com.mycorp.mynamespace.CabLocation.Builder clearLocationCode() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Latitude' field.
      * The Latitude of location
      * @return The value.
      */
    public java.lang.CharSequence getLatitude() {
      return Latitude;
    }

    /**
      * Sets the value of the 'Latitude' field.
      * The Latitude of location
      * @param value The value of 'Latitude'.
      * @return This builder.
      */
    public com.mycorp.mynamespace.CabLocation.Builder setLatitude(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.Latitude = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Latitude' field has been set.
      * The Latitude of location
      * @return True if the 'Latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Latitude' field.
      * The Latitude of location
      * @return This builder.
      */
    public com.mycorp.mynamespace.CabLocation.Builder clearLatitude() {
      Latitude = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Longitude' field.
      * The Longitude of location
      * @return The value.
      */
    public java.lang.CharSequence getLongitude() {
      return Longitude;
    }

    /**
      * Sets the value of the 'Longitude' field.
      * The Longitude of location
      * @param value The value of 'Longitude'.
      * @return This builder.
      */
    public com.mycorp.mynamespace.CabLocation.Builder setLongitude(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.Longitude = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Longitude' field has been set.
      * The Longitude of location
      * @return True if the 'Longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Longitude' field.
      * The Longitude of location
      * @return This builder.
      */
    public com.mycorp.mynamespace.CabLocation.Builder clearLongitude() {
      Longitude = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CabLocation build() {
      try {
        CabLocation record = new CabLocation();
        record.LocationCode = fieldSetFlags()[0] ? this.LocationCode : (java.lang.Integer) defaultValue(fields()[0]);
        record.Latitude = fieldSetFlags()[1] ? this.Latitude : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.Longitude = fieldSetFlags()[2] ? this.Longitude : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CabLocation>
    WRITER$ = (org.apache.avro.io.DatumWriter<CabLocation>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CabLocation>
    READER$ = (org.apache.avro.io.DatumReader<CabLocation>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
